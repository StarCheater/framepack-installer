name: Build Installer

# Trigger the workflow on push to main branch and pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-installer:
    name: Build Windows Installer
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Inno Setup
      run: |
        # Download and install Inno Setup
        Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "innosetup-installer.exe"
        Start-Process -FilePath "innosetup-installer.exe" -ArgumentList "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART" -Wait
        # Add Inno Setup to PATH
        $env:PATH += ";C:\Program Files (x86)\Inno Setup 6"
        echo "C:\Program Files (x86)\Inno Setup 6" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: powershell
    
    - name: Create build directories
      run: |
        # Create necessary directories that the installer script expects
        New-Item -ItemType Directory -Force -Path "build"
        New-Item -ItemType Directory -Force -Path "assets"
        New-Item -ItemType Directory -Force -Path "icons"
        New-Item -ItemType Directory -Force -Path "dist"
      shell: powershell
      
    - name: Create placeholder application files
      run: |
        # Create placeholder exe and dll files for demo purposes
        # In a real scenario, these would be actual built artifacts
        echo "This is a placeholder for FramePackStudio.exe" > build/FramePackStudio.exe
        echo "This is a placeholder for library.dll" > build/library.dll
        
        # Create placeholder asset files
        echo "This is a placeholder asset file" > assets/sample.txt
        
        # Create placeholder license and readme
        echo "MIT License - This is a placeholder license file for FramePack Studio" > LICENSE.txt
        echo "FramePack Studio - README - This is a placeholder readme file" > README.txt
        
        # Create a simple placeholder icon file (empty for now)
        echo "" > icons/app.ico
      shell: powershell
    
    - name: Build installer
      run: |
        # Compile the Inno Setup script
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
      shell: powershell
    
    - name: Upload installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: framepack-studio-installer
        path: dist/*.exe
        retention-days: 90
        
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: FramePack Studio ${{ github.ref }}
        body: |
          FramePack Studio Windows Installer
          
          ## Installation
          Download the installer executable and run it to install FramePack Studio on Windows.
          
          ## Changes
          This release includes the latest version of FramePack Studio with bug fixes and improvements.
        draft: false
        prerelease: false
        
    - name: Upload Release Asset (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/FramePackStudio-Setup-1.0.0.exe
        asset_name: FramePackStudio-Setup-${{ github.ref_name }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable
